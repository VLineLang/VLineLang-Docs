import{_ as n,c as l,o as i,ae as s}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"VLineLang 指南","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),e={name:"guide/index.md"};function t(p,a,r,o,h,d){return i(),l("div",null,a[0]||(a[0]=[s(`<h1 id="vlinelang-指南" tabindex="-1">VLineLang 指南 <a class="header-anchor" href="#vlinelang-指南" aria-label="Permalink to &quot;VLineLang 指南&quot;">​</a></h1><p>本指南将帮助你全面了解VLineLang编程语言的核心概念和使用方法。</p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="./getting-started.html">快速开始</a> - 安装和第一个程序</li><li><a href="./basic-syntax.html">基础语法</a> - 变量、数据类型和基本操作</li><li><a href="./control-flow.html">控制结构</a> - 条件语句和循环</li><li><a href="./functions.html">函数</a> - 函数定义和使用</li><li><a href="./oop.html">面向对象</a> - 类、对象和继承</li><li><a href="./stdlib.html">标准库</a> - 内置函数和工具</li><li><a href="./module-system.html">模块系统</a> - 如何组织代码和管理依赖</li></ul><h2 id="为什么选择vlinelang" tabindex="-1">为什么选择VLineLang？ <a class="header-anchor" href="#为什么选择vlinelang" aria-label="Permalink to &quot;为什么选择VLineLang？&quot;">​</a></h2><p>VLineLang是一个现代化的编程语言，它具有以下特点：</p><h3 id="简洁的语法" tabindex="-1">简洁的语法 <a class="header-anchor" href="#简洁的语法" aria-label="Permalink to &quot;简洁的语法&quot;">​</a></h3><p>VLineLang的语法设计简洁明了，易于学习和使用：</p><div class="language-vline vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vline</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 变量声明和基本运算</span></span>
<span class="line"><span>x = 10</span></span>
<span class="line"><span>y = 20</span></span>
<span class="line"><span>sum = x + y</span></span>
<span class="line"><span>print(sum)  // 输出: 30</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 条件语句</span></span>
<span class="line"><span>if x &gt; 0</span></span>
<span class="line"><span>    print(&quot;x是正数&quot;)</span></span>
<span class="line"><span>else</span></span>
<span class="line"><span>    print(&quot;x不是正数&quot;)</span></span>
<span class="line"><span>end</span></span></code></pre></div><h3 id="强大的功能" tabindex="-1">强大的功能 <a class="header-anchor" href="#强大的功能" aria-label="Permalink to &quot;强大的功能&quot;">​</a></h3><p>尽管语法简洁，VLineLang仍然提供了强大的功能支持：</p><ul><li><p><strong>完整的数据类型系统</strong></p><ul><li>数字（整数和浮点数）</li><li>字符串（支持转义序列）</li><li>列表（动态数组）</li></ul></li><li><p><strong>面向对象编程</strong></p><ul><li>类和对象</li><li>继承机制</li><li>成员函数</li><li>构造函数</li></ul></li></ul><h3 id="丰富的标准库" tabindex="-1">丰富的标准库 <a class="header-anchor" href="#丰富的标准库" aria-label="Permalink to &quot;丰富的标准库&quot;">​</a></h3><p>VLineLang提供了丰富的内置函数和工具：</p><ul><li>数学函数</li><li>文件操作</li><li>字符串处理</li><li>日期和时间</li><li>更多详见标准库页面</li></ul>`,15)]))}const g=n(e,[["render",t]]);export{u as __pageData,g as default};
